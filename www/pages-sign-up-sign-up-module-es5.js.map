{"version":3,"sources":["webpack:///src/pages/sign-up/sign-up.page.html","webpack:///src/pages/sign-up/sign-up-routing.module.ts","webpack:///src/pages/sign-up/sign-up.module.ts","webpack:///src/pages/sign-up/sign-up.page.scss","webpack:///src/pages/sign-up/sign-up.page.ts","webpack:///src/services/domain/cidade.service.ts","webpack:///src/services/domain/estado.service.ts"],"names":["routes","path","component","SignUpPageRoutingModule","imports","forChild","exports","SignUpPageModule","providers","declarations","SignUpPage","formBuilder","cidadeService","estadoService","clienteService","alertController","navegateControll","formGroup","group","nome","required","minLength","maxLength","email","tipo","cpfOuCnpj","senha","logradouro","numero","complemento","bairro","cep","telefone1","telefone2","telefone3","estadoId","cidadeId","findAll","pipe","response","estados","controls","setValue","id","updateCidades","subscribe","value","cidades","insert","showInsertOk","create","header","message","buttons","text","handler","pop","alert","present","selector","template","CidadeService","http","get","API_URL","EstadoService"],"mappings":"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","file":"pages-sign-up-sign-up-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"secondary\\\">\\n      <ion-button>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"star\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Sign Up</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"formGroup\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Nome*</ion-label>\\n      <ion-input formControlName=\\\"nome\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.nome.dirty && formGroup.controls.nome.errors\\\" margin-left>Valor inválido\\n    </p>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email*</ion-label>\\n      <ion-input formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.email.dirty && formGroup.controls.email.errors\\\" margin-left>Valor\\n      inválido</p>\\n    <ion-list radio-group name=\\\"tipo\\\">\\n      <ion-list-header> Tipo de cliente </ion-list-header>\\n      <ion-radio-group value=\\\"biff\\\">\\n        <ion-item>\\n          <ion-label>Pessoa física</ion-label>\\n          <ion-radio slot=\\\"end\\\" value=\\\"1\\\"></ion-radio>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>Pessoa jurídica</ion-label>\\n          <ion-radio slot=\\\"end\\\" value=\\\"2\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n    </ion-list>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">CPF ou CNPJ</ion-label>\\n      <ion-input formControlName=\\\"cpfOuCnpj\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.cpfOuCnpj.dirty && formGroup.controls.cpfOuCnpj.errors\\\" margin-left>\\n      Valor inválido</p>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Senha*</ion-label>\\n      <ion-input formControlName=\\\"senha\\\" type=\\\"password\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.senha.dirty && formGroup.controls.senha.errors\\\" margin-left>Valor\\n      inválido</p>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Logradouro*</ion-label>\\n      <ion-input formControlName=\\\"logradouro\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.logradouro.dirty && formGroup.controls.logradouro.errors\\\" margin-left>\\n      Valor inválido</p>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Número*</ion-label>\\n      <ion-input formControlName=\\\"numero\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.numero.dirty && formGroup.controls.numero.errors\\\" margin-left>Valor\\n      inválido</p>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Complemento</ion-label>\\n      <ion-input formControlName=\\\"complemento\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Bairro</ion-label>\\n      <ion-input formControlName=\\\"bairro\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">CEP*</ion-label>\\n      <ion-input formControlName=\\\"cep\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.cep.dirty && formGroup.controls.cep.errors\\\" margin-left>Valor inválido\\n    </p>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Telefone 1*</ion-label>\\n      <ion-input formControlName=\\\"telefone1\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.telefone1.dirty && formGroup.controls.telefone1.errors\\\" margin-left>\\n      Valor inválido</p>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Telefone 2</ion-label>\\n      <ion-input formControlName=\\\"telefone2\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Telefone 3</ion-label>\\n      <ion-input formControlName=\\\"telefone3\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-list>\\n      <ion-list-header>\\n        <ion-label> Endereço </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>Estado</ion-label>\\n        <ion-select formControlName=\\\"estadoId\\\" value=\\\"1\\\" (ionChange)=\\\"updateCidades()\\\">\\n          <ion-select-option *ngFor=\\\"let estado of estados; first as f\\\" [value]=\\\"estado.id\\\">\\n            {{estado.nome}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Cidade</ion-label>\\n        <ion-select formControlName=\\\"cidadeId\\\">\\n          <ion-select-option *ngFor=\\\"let cidade of cidades\\\" [value]=\\\"cidade.id\\\">{{cidade.nome}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n    </ion-list>\\n\\n    <ion-button [disabled]=\\\"formGroup.invalid\\\" (click)=\\\"signupUser()\\\" expand=\\\"block\\\">Criar conta</ion-button>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignUpPage } from './sign-up.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignUpPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignUpPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { CidadeService } from 'src/services/domain/cidade.service';\nimport { EstadoService } from 'src/services/domain/estado.service';\nimport { SignUpPageRoutingModule } from './sign-up-routing.module';\nimport { SignUpPage } from './sign-up.page';\n\n\n\n\n@NgModule({\n  imports: [\n    IonicModule,\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    SignUpPageRoutingModule\n  ],\n  providers: [\n    CidadeService,\n    EstadoService,\n  ],\n  declarations: [SignUpPage]\n})\nexport class SignUpPageModule { }\n","export default \".danger {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9wYWdlcy9zaWduLXVwL3NpZ24tdXAucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksVUFBQTtBQUNKIiwiZmlsZSI6InNyYy9wYWdlcy9zaWduLXVwL3NpZ24tdXAucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRhbmdlciB7XG4gICAgY29sb3I6IHJlZDtcbn0iXX0= */\";","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { take, tap } from 'rxjs/operators';\nimport { CidadeDTO } from 'src/models/cidade.dto';\nimport { EstadoDTO } from 'src/models/estado.dto';\nimport { CidadeService } from 'src/services/domain/cidade.service';\nimport { ClienteService } from 'src/services/domain/cliente.service';\nimport { EstadoService } from 'src/services/domain/estado.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.page.html',\n  styleUrls: ['./sign-up.page.scss'],\n})\nexport class SignUpPage {\n  formGroup: FormGroup;\n  estados: EstadoDTO[];\n  cidades: CidadeDTO[];\n\n  constructor(\n    formBuilder: FormBuilder,\n    private cidadeService: CidadeService,\n    private estadoService: EstadoService,\n    private clienteService: ClienteService,\n    private alertController: AlertController,\n    private navegateControll: NavController,\n  ) {\n    this.formGroup = formBuilder.group({\n      nome: ['Joaquim', [Validators.required, Validators.minLength(5), Validators.maxLength(120)]],\n      email: ['joaquim@gmail.com', [Validators.required, Validators.email]],\n      tipo: ['1', [Validators.required]],\n      cpfOuCnpj: ['06134596280', [Validators.required, Validators.minLength(11), Validators.maxLength(14)]],\n      senha: ['123', [Validators.required]],\n      logradouro: ['Rua Via', [Validators.required]],\n      numero: ['25', [Validators.required]],\n      complemento: ['Apto 3', []],\n      bairro: ['Copacabana', []],\n      cep: ['10828333', [Validators.required]],\n      telefone1: ['977261827', [Validators.required]],\n      telefone2: ['', []],\n      telefone3: ['', []],\n      estadoId: [null, [Validators.required]],\n      cidadeId: [null, [Validators.required]]\n    });\n\n    this.estadoService.findAll().pipe(\n      tap(response => {\n        this.estados = response;\n        this.formGroup.controls.estadoId.setValue(this.estados[0].id);\n        this.updateCidades();\n      }),\n      take(1),\n    ).subscribe();\n  }\n\n  updateCidades() {\n    const estadoId = this.formGroup.value.estadoId;\n    this.cidadeService.findAll(estadoId).pipe(\n      tap(response => {\n        this.cidades = response;\n        this.formGroup.controls.cidadeId.setValue(null);\n      }),\n      take(1),\n    ).subscribe();\n  }\n\n\n  signupUser() {\n    this.clienteService.insert(this.formGroup.value).pipe(\n      tap(() => this.showInsertOk())\n    ).subscribe();\n  }\n\n  async showInsertOk() {\n    const alert = await this.alertController.create({\n      header: `Sucesso!`,\n      message: 'Cadastro efetuado com sucesso',\n      buttons: [\n        {\n          text: 'OK',\n          handler: () => this.navegateControll.pop()\n        }\n      ]\n    });\n    await alert.present();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CidadeDTO } from 'src/models/cidade.dto';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class CidadeService {\n\n    constructor(public http: HttpClient) {\n    }\n\n    findAll(estadoId: string): Observable<CidadeDTO[]> {\n        return this.http.get<CidadeDTO[]>(`${environment.API_URL}/estados/${estadoId}/cidades`);\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { EstadoDTO } from 'src/models/estado.dto';\n\n@Injectable()\nexport class EstadoService {\n\n    constructor(public http: HttpClient) {\n    }\n\n    findAll(): Observable<EstadoDTO[]> {\n        return this.http.get<EstadoDTO[]>(`${environment.API_URL}/estados`);\n    }\n}\n"]}