{"version":3,"sources":["./src/pages/order-confirmation/order-confirmation.page.html","./src/pages/order-confirmation/order-confirmation-routing.module.ts","./src/pages/order-confirmation/order-confirmation.module.ts","./src/pages/order-confirmation/order-confirmation.page.scss","./src/pages/order-confirmation/order-confirmation.page.ts","./src/services/domain/pedido.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,spBAAulB,mBAAmB,0CAA0C,iBAAiB,4BAA4B,iDAAiD,0TAA0T,eAAe,sBAAsB,gBAAgB,+SAA+S,sBAAsB,IAAI,kBAAkB,wBAAwB,uBAAuB,GAAG,kBAAkB,OAAO,eAAe,uBAAuB,uBAAuB,IAAI,8BAA8B,0bAA0b,mCAAmC,olBAAolB,E;;;;;;;;;;;;;;;;;;;ACA7nF;AACc;AAEW;AAElE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAqB;KACjC;CACF,CAAC;IAMW,kCAAkC,SAAlC,kCAAkC;CAAG;AAArC,kCAAkC;IAJ9C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,kCAAkC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACN;AACI;AACA;AACsB;AACsB;AACvB;IAerD,2BAA2B,SAA3B,2BAA2B;CAAI;AAA/B,2BAA2B;IAVvC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,qGAAkC;SACnC;QACD,YAAY,EAAE,CAAC,8EAAqB,CAAC;QACrC,SAAS,EAAE,CAAC,gFAAa,CAAC;KAC3B,CAAC;GACW,2BAA2B,CAAI;AAAJ;;;;;;;;;;;;;ACrBxC;AAAe,6GAA8C,2KAA2K,E;;;;;;;;;;;;;;;;;;;;;;ACA9L;AACD;AAEQ;AAIO;AACa;AACF;IAOtD,qBAAqB,SAArB,qBAAqB;IAMhC,YACU,MAAc,EACtB,cAA8B,EACtB,WAAwB,EACxB,aAA4B;QAH5B,WAAM,GAAN,MAAM,CAAQ;QAEd,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAEpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;QAErE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;QAClD,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,YAAY,CAAC,MAAkB;QAC7B,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;QAEjC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAClC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CACzC,0DAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,EAC/C,0DAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAClF,iEAAU,CAAC,KAAK,CAAC,EAAE;YACjB,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACxB,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aACvC;QACH,CAAC,CAAC,CACH,CAAC,SAAS,EAAE,CAAC;IAChB,CAAC;IAEO,SAAS,CAAC,QAAgB;QAChC,MAAM,QAAQ,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC3C,OAAO,QAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IAC1C,CAAC;CACF;;YA7DQ,sDAAM;YAON,kFAAc;YADd,qEAAW;YAEX,gFAAa;;AAOT,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,0PAA6C;;KAE9C,CAAC;GACW,qBAAqB,CA8CjC;AA9CiC;;;;;;;;;;;;;;;;;;;;AChBgB;AACP;AAEoB;IAGlD,aAAa,SAAb,aAAa;IACtB,YAAmB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAEzC,WAAM,GAAG,CAAC,SAAoB,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CACnD,GAAG,qEAAW,CAAC,OAAO,UAAU,EAChC,SAAS,EACT;YACI,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;SACvB,CACJ;IAT4C,CAAC;CAUjD;;YAjBQ,+DAAU;;AAMN,aAAa;IADzB,gEAAU,EAAE;GACA,aAAa,CAWzB;AAXyB","file":"pages-order-confirmation-order-confirmation-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title *ngIf=\\\"codpedido\\\">Pedido registrado!</ion-title>\\n    <ion-title *ngIf=\\\"!codpedido\\\">Confira seu pedido</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card>\\n    <ion-card-header class=\\\"ion-inherit-color md hydrated\\\">\\n      <ion-card-title> Itens do pedido </ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-item *ngFor=\\\"let item of cartItems\\\">\\n      <ion-thumbnail slot=\\\"start\\\">\\n        <img [src]=\\\"item.produto.imageUrl || 'assets/imgs/prod.jpg'\\\">\\n      </ion-thumbnail>\\n\\n      <ion-label>\\n        <h2>{{item.produto.nome}}</h2>\\n        <p class=\\\"nolinebreak\\\">{{item.quantidade}}</p>\\n        <p item-end>{{item.produto.preco * item.quantidade | currency}}</p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-card>\\n\\n\\n  <ng-container *ngIf=\\\"cliente$ | async as cliente\\\">\\n    <div *ngIf=\\\"codpedido\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title> Cliente </ion-card-title>\\n        </ion-card-header>\\n\\n        <ion-item>\\n          <h2>{{cliente?.nome}}</h2>\\n          <p>{{cliente?.email}}</p>\\n        </ion-item>\\n      </ion-card>\\n\\n      <ng-container *ngIf=\\\"findEndereco(cliente) as endereco\\\">\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title> Endereço de entrega </ion-card-title>\\n          </ion-card-header>\\n\\n          <ion-item>\\n            <h2>{{endereco?.logradouro}}, {{endereco?.numero}}</h2>\\n            <p>{{endereco?.complemento}} {{endereco?.bairro}} CEP {{endereco?.cep}}</p>\\n            <p>{{endereco?.cidade.nome}}, {{endereco?.cidade.estado.nome}}</p>\\n          </ion-item>\\n        </ion-card>\\n      </ng-container>\\n    </div>\\n  </ng-container>\\n\\n\\n  <div *ngIf=\\\"codpedido\\\">\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title> Pagamento </ion-card-title>\\n      </ion-card-header>\\n\\n      <ng-container *ngIf=\\\"pedido.pagamento['@type']=='pagamentoComCartao'\\\">\\n        <ion-item>\\n          <ion-label> Pagamento com cartão </ion-label>\\n          <p>Parcelas: {{pedido.pagamento.numeroDeParcelas}}</p>\\n        </ion-item>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"pedido.pagamento['@type']=='pagamentoComBoleto'\\\">\\n        <ion-item>\\n          <ion-label> Pagamento com boleto </ion-label>\\n        </ion-item>\\n      </ng-container>\\n\\n      <ion-button expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"checkout()\\\">Confirmar pedido</ion-button>\\n      <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" routerLink=\\\"/cart\\\">Voltar</ion-button>\\n    </ion-card>\\n\\n    <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" routerLink=\\\"/cart\\\">Voltar</ion-button>\\n  </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrderConfirmationPage } from './order-confirmation.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderConfirmationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrderConfirmationPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { PedidoService } from 'src/services/domain/pedido.service';\nimport { OrderConfirmationPageRoutingModule } from './order-confirmation-routing.module';\nimport { OrderConfirmationPage } from './order-confirmation.page';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrderConfirmationPageRoutingModule\n  ],\n  declarations: [OrderConfirmationPage],\n  providers: [PedidoService]\n})\nexport class OrderConfirmationPageModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcGFnZXMvb3JkZXItY29uZmlybWF0aW9uL29yZGVyLWNvbmZpcm1hdGlvbi5wYWdlLnNjc3MifQ== */\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { CartItem } from 'src/models/cart.item';\nimport { ClienteDTO } from 'src/models/cliente.dto';\nimport { PedidoDTO } from 'src/models/pedido.dto';\nimport { CartService } from 'src/services/cart.service';\nimport { ClienteService } from 'src/services/domain/cliente.service';\nimport { PedidoService } from 'src/services/domain/pedido.service';\n\n@Component({\n  selector: 'app-order-confirmation',\n  templateUrl: './order-confirmation.page.html',\n  styleUrls: ['./order-confirmation.page.scss'],\n})\nexport class OrderConfirmationPage {\n  pedido: PedidoDTO;\n  cartItems: CartItem[];\n  cliente$: Observable<ClienteDTO>;\n  codpedido: string;\n\n  constructor(\n    private router: Router,\n    clienteService: ClienteService,\n    private cartService: CartService,\n    private pedidoService: PedidoService,\n  ) {\n    this.pedido = this.router.getCurrentNavigation().extras.state.pedido;\n\n    this.cartItems = this.cartService.getCart().items;\n    clienteService.findById(this.pedido.cliente.id);\n  }\n\n  findEndereco(client: ClienteDTO) {\n    const id = this.pedido.enderecoDeEntrega.id;\n    const list = client['enderecos'];\n\n    const position = list.findIndex(x => x.id === id);\n    return list[position];\n  }\n\n  total() {\n    return this.cartService.total();\n  }\n\n  checkout() {\n    this.pedidoService.insert(this.pedido).pipe(\n      tap(() => this.cartService.createOrClearCart()),\n      tap(response => this.codpedido = this.extractId(response.headers.get('location'))),\n      catchError(error => {\n        if (error.status === 403) {\n          return this.router.navigateByUrl('/');\n        }\n      })\n    ).subscribe();\n  }\n\n  private extractId(location: string) {\n    const position = location.lastIndexOf('/');\n    return location.substring(position + 1);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { PedidoDTO } from '../../models/pedido.dto';\nimport { environment } from './../../environments/environment';\n\n@Injectable()\nexport class PedidoService {\n    constructor(public httpClient: HttpClient) { }\n\n    insert = (pedidoDTO: PedidoDTO) => this.httpClient.post(\n        `${environment.API_URL}/pedidos`,\n        pedidoDTO,\n        {\n            observe: 'response',\n            responseType: 'text'\n        }\n    )\n}\n"],"sourceRoot":"webpack:///"}