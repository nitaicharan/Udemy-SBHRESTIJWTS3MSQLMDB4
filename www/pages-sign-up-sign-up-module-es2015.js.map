{"version":3,"sources":["./src/pages/sign-up/sign-up.page.html","./src/pages/sign-up/sign-up-routing.module.ts","./src/pages/sign-up/sign-up.module.ts","./src/pages/sign-up/sign-up.page.scss","./src/pages/sign-up/sign-up.page.ts","./src/services/domain/cidade.service.ts","./src/services/domain/estado.service.ts"],"names":[],"mappings":"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","file":"pages-sign-up-sign-up-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"secondary\\\">\\n      <ion-button>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"star\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Sign Up</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"formGroup\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Nome*</ion-label>\\n      <ion-input formControlName=\\\"nome\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.nome.dirty && formGroup.controls.nome.errors\\\" margin-left>Valor inválido\\n    </p>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email*</ion-label>\\n      <ion-input formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.email.dirty && formGroup.controls.email.errors\\\" margin-left>Valor\\n      inválido</p>\\n    <ion-list radio-group name=\\\"tipo\\\">\\n      <ion-list-header> Tipo de cliente </ion-list-header>\\n      <ion-radio-group value=\\\"biff\\\">\\n        <ion-item>\\n          <ion-label>Pessoa física</ion-label>\\n          <ion-radio slot=\\\"end\\\" value=\\\"1\\\"></ion-radio>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>Pessoa jurídica</ion-label>\\n          <ion-radio slot=\\\"end\\\" value=\\\"2\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n    </ion-list>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">CPF ou CNPJ</ion-label>\\n      <ion-input formControlName=\\\"cpfOuCnpj\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.cpfOuCnpj.dirty && formGroup.controls.cpfOuCnpj.errors\\\" margin-left>\\n      Valor inválido</p>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Senha*</ion-label>\\n      <ion-input formControlName=\\\"senha\\\" type=\\\"password\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.senha.dirty && formGroup.controls.senha.errors\\\" margin-left>Valor\\n      inválido</p>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Logradouro*</ion-label>\\n      <ion-input formControlName=\\\"logradouro\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.logradouro.dirty && formGroup.controls.logradouro.errors\\\" margin-left>\\n      Valor inválido</p>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Número*</ion-label>\\n      <ion-input formControlName=\\\"numero\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.numero.dirty && formGroup.controls.numero.errors\\\" margin-left>Valor\\n      inválido</p>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Complemento</ion-label>\\n      <ion-input formControlName=\\\"complemento\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Bairro</ion-label>\\n      <ion-input formControlName=\\\"bairro\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">CEP*</ion-label>\\n      <ion-input formControlName=\\\"cep\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.cep.dirty && formGroup.controls.cep.errors\\\" margin-left>Valor inválido\\n    </p>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Telefone 1*</ion-label>\\n      <ion-input formControlName=\\\"telefone1\\\"></ion-input>\\n    </ion-item>\\n    <p class=\\\"danger\\\" *ngIf=\\\"formGroup.controls.telefone1.dirty && formGroup.controls.telefone1.errors\\\" margin-left>\\n      Valor inválido</p>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Telefone 2</ion-label>\\n      <ion-input formControlName=\\\"telefone2\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Telefone 3</ion-label>\\n      <ion-input formControlName=\\\"telefone3\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-list>\\n      <ion-list-header>\\n        <ion-label> Endereço </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>Estado</ion-label>\\n        <ion-select formControlName=\\\"estadoId\\\" value=\\\"1\\\" (ionChange)=\\\"updateCidades()\\\">\\n          <ion-select-option *ngFor=\\\"let estado of estados; first as f\\\" [value]=\\\"estado.id\\\">\\n            {{estado.nome}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Cidade</ion-label>\\n        <ion-select formControlName=\\\"cidadeId\\\">\\n          <ion-select-option *ngFor=\\\"let cidade of cidades\\\" [value]=\\\"cidade.id\\\">{{cidade.nome}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n    </ion-list>\\n\\n    <ion-button [disabled]=\\\"formGroup.invalid\\\" (click)=\\\"signupUser()\\\" expand=\\\"block\\\">Criar conta</ion-button>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignUpPage } from './sign-up.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignUpPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignUpPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { CidadeService } from 'src/services/domain/cidade.service';\nimport { EstadoService } from 'src/services/domain/estado.service';\nimport { SignUpPageRoutingModule } from './sign-up-routing.module';\nimport { SignUpPage } from './sign-up.page';\n\n\n\n\n@NgModule({\n  imports: [\n    IonicModule,\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    SignUpPageRoutingModule\n  ],\n  providers: [\n    CidadeService,\n    EstadoService,\n  ],\n  declarations: [SignUpPage]\n})\nexport class SignUpPageModule { }\n","export default \".danger {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9wYWdlcy9zaWduLXVwL3NpZ24tdXAucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksVUFBQTtBQUNKIiwiZmlsZSI6InNyYy9wYWdlcy9zaWduLXVwL3NpZ24tdXAucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRhbmdlciB7XG4gICAgY29sb3I6IHJlZDtcbn0iXX0= */\";","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { take, tap } from 'rxjs/operators';\nimport { CidadeDTO } from 'src/models/cidade.dto';\nimport { EstadoDTO } from 'src/models/estado.dto';\nimport { CidadeService } from 'src/services/domain/cidade.service';\nimport { ClienteService } from 'src/services/domain/cliente.service';\nimport { EstadoService } from 'src/services/domain/estado.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.page.html',\n  styleUrls: ['./sign-up.page.scss'],\n})\nexport class SignUpPage {\n  formGroup: FormGroup;\n  estados: EstadoDTO[];\n  cidades: CidadeDTO[];\n\n  constructor(\n    formBuilder: FormBuilder,\n    private cidadeService: CidadeService,\n    private estadoService: EstadoService,\n    private clienteService: ClienteService,\n    private alertController: AlertController,\n    private navegateControll: NavController,\n  ) {\n    this.formGroup = formBuilder.group({\n      nome: ['Joaquim', [Validators.required, Validators.minLength(5), Validators.maxLength(120)]],\n      email: ['joaquim@gmail.com', [Validators.required, Validators.email]],\n      tipo: ['1', [Validators.required]],\n      cpfOuCnpj: ['06134596280', [Validators.required, Validators.minLength(11), Validators.maxLength(14)]],\n      senha: ['123', [Validators.required]],\n      logradouro: ['Rua Via', [Validators.required]],\n      numero: ['25', [Validators.required]],\n      complemento: ['Apto 3', []],\n      bairro: ['Copacabana', []],\n      cep: ['10828333', [Validators.required]],\n      telefone1: ['977261827', [Validators.required]],\n      telefone2: ['', []],\n      telefone3: ['', []],\n      estadoId: [null, [Validators.required]],\n      cidadeId: [null, [Validators.required]]\n    });\n\n    this.estadoService.findAll().pipe(\n      tap(response => {\n        this.estados = response;\n        this.formGroup.controls.estadoId.setValue(this.estados[0].id);\n        this.updateCidades();\n      }),\n      take(1),\n    ).subscribe();\n  }\n\n  updateCidades() {\n    const estadoId = this.formGroup.value.estadoId;\n    this.cidadeService.findAll(estadoId).pipe(\n      tap(response => {\n        this.cidades = response;\n        this.formGroup.controls.cidadeId.setValue(null);\n      }),\n      take(1),\n    ).subscribe();\n  }\n\n\n  signupUser() {\n    this.clienteService.insert(this.formGroup.value).pipe(\n      tap(() => this.showInsertOk())\n    ).subscribe();\n  }\n\n  async showInsertOk() {\n    const alert = await this.alertController.create({\n      header: `Sucesso!`,\n      message: 'Cadastro efetuado com sucesso',\n      buttons: [\n        {\n          text: 'OK',\n          handler: () => this.navegateControll.pop()\n        }\n      ]\n    });\n    await alert.present();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CidadeDTO } from 'src/models/cidade.dto';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class CidadeService {\n\n    constructor(public http: HttpClient) {\n    }\n\n    findAll(estadoId: string): Observable<CidadeDTO[]> {\n        return this.http.get<CidadeDTO[]>(`${environment.API_URL}/estados/${estadoId}/cidades`);\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { EstadoDTO } from 'src/models/estado.dto';\n\n@Injectable()\nexport class EstadoService {\n\n    constructor(public http: HttpClient) {\n    }\n\n    findAll(): Observable<EstadoDTO[]> {\n        return this.http.get<EstadoDTO[]>(`${environment.API_URL}/estados`);\n    }\n}\n"],"sourceRoot":"webpack:///"}