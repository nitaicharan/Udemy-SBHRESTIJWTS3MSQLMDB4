{"version":3,"sources":["webpack:///src/pages/pick-address/pick-address.page.html","webpack:///src/pages/pick-address/pick-address-routing.module.ts","webpack:///src/pages/pick-address/pick-address.module.ts","webpack:///src/pages/pick-address/pick-address.page.scss","webpack:///src/pages/pick-address/pick-address.page.ts"],"names":["routes","path","component","PickAddressPageRoutingModule","imports","forChild","exports","PickAddressPageModule","declarations","PickAddressPage","router","cartService","storageService","clienteService","localUser","getLocalUser","email","navigateByUrl","items$","findByEmail","pipe","cliente","cart","getCart","pedido","pagamento","enderecoDeEntrega","id","itens","items","map","i","quantidade","produto","item","navigationExtras","state","navigate","selector","template"],"mappings":"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","file":"pages-pick-address-pick-address-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Fechamento de pedido</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list>\\n    <ion-item button *ngFor=\\\"let item of items$ | async\\\" (click)=\\\"nextPage(item)\\\">\\n      <ion-label>\\n        <h2>{{item.logradouro}}, {{item.numero}}</h2>\\n        <h3>{{item.complemento}} {{item.bairro}} CEP {{item.cep}}</h3>\\n        <p>{{item.cidade.nome}}, {{item.cidade.estado.nome}}</p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PickAddressPage } from './pick-address.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PickAddressPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PickAddressPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PickAddressPageRoutingModule } from './pick-address-routing.module';\n\nimport { PickAddressPage } from './pick-address.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PickAddressPageRoutingModule\n  ],\n  declarations: [PickAddressPage]\n})\nexport class PickAddressPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcGFnZXMvcGljay1hZGRyZXNzL3BpY2stYWRkcmVzcy5wYWdlLnNjc3MifQ== */\";","import { Component } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take, tap } from 'rxjs/operators';\nimport { ClienteDTO } from 'src/models/cliente.dto';\nimport { ClienteService } from 'src/services/domain/cliente.service';\nimport { EnderecoDTO } from './../../models/endereco.dto';\nimport { PedidoDTO } from './../../models/pedido.dto';\nimport { CartService } from './../../services/cart.service';\nimport { StorageService } from './../../services/storage.service';\n\n@Component({\n  selector: 'app-pick-address',\n  templateUrl: './pick-address.page.html',\n  styleUrls: ['./pick-address.page.scss'],\n})\nexport class PickAddressPage {\n  pedido: PedidoDTO;\n  items$: Observable<EnderecoDTO[]>;\n\n  constructor(\n    private router: Router,\n    cartService: CartService,\n    storageService: StorageService,\n    clienteService: ClienteService,\n  ) {\n    const localUser = storageService.getLocalUser();\n\n    if (!localUser || !localUser?.email) router.navigateByUrl('/');\n\n    this.items$ = clienteService.findByEmail(localUser.email).pipe(\n      tap((cliente: ClienteDTO) => {\n        const cart = cartService.getCart();\n        this.pedido = {\n          pagamento: null,\n          enderecoDeEntrega: null,\n          cliente: { id: cliente.id },\n          itens: cart.items.map(i => ({ quantidade: i.quantidade, produto: { id: i.produto.id } }))\n        };\n      }),\n      map((cliente: ClienteDTO) => cliente['enderecos']),\n      take(1),\n    );\n  }\n\n  nextPage(item: EnderecoDTO) {\n    const navigationExtras: NavigationExtras = { state: { pedido: this.pedido } };\n\n    this.pedido.enderecoDeEntrega = { id: item.id };\n    this.router.navigate(['/payment'], navigationExtras);\n  }\n}\n"]}