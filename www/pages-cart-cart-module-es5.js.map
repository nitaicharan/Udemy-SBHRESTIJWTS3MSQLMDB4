{"version":3,"sources":["webpack:///src/pages/cart/cart.page.html","webpack:///src/pages/cart/cart-routing.module.ts","webpack:///src/pages/cart/cart.module.ts","webpack:///src/pages/cart/cart.page.scss","webpack:///src/pages/cart/cart.page.ts"],"names":["routes","path","component","CartPageRoutingModule","imports","forChild","exports","CartPageModule","declarations","CartPage","service","produtoService","items$","loadImageUrls","getCart","items","pipe","item","getSmallImageFromBucket","produto","id","p","imageUrl","BUCKET_URL","cartItems","cartItem","removeProduto","increaseQuantity","decreaseQuantity","total","selector","template"],"mappings":"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","file":"pages-cart-cart-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Cart</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <ion-list>\\n    <ion-item button *ngFor=\\\"let item of items$ | async\\\">\\n      <ion-thumbnail slot=\\\"start\\\">\\n        <img [src]=\\\"item.produto.imageUrl || 'assets/imgs/prod.jpg'\\\">\\n      </ion-thumbnail>\\n      <ion-label>\\n        <h2>{{item.produto.nome}}</h2>\\n        <p>{{item.produto.preco | currency}}</p>\\n      </ion-label>\\n\\n      <ion-icon name=\\\"remove-circle\\\" color=\\\"primary\\\" (click)=\\\"decreaseQuantity(item.produto)\\\">\\n      </ion-icon>\\n      <ion-card-content>{{item.quantidade}}</ion-card-content>\\n      <ion-icon name=\\\"add-circle\\\" color=\\\"primary\\\" (click)=\\\"increaseQuantity(item.produto)\\\"></ion-icon>\\n      <ion-icon name=\\\"trash\\\" item-end color=\\\"danger\\\" (click)=\\\"removeItem(item.produto)\\\"></ion-icon>\\n    </ion-item>\\n\\n    <ng-container *ngIf=\\\"total() > 0 else empity\\\">\\n      <ion-item>\\n        <ion-label>\\n          <h1>Total</h1>\\n        </ion-label>\\n        <h1 slot=\\\"end\\\">{{total()}}</h1>\\n      </ion-item>\\n    </ng-container>\\n\\n    <ng-template #empity>\\n      <ion-item>\\n        <ion-label>\\n          <h1 align=\\\"center\\\">Seu carrinho est√° vazio</h1>\\n        </ion-label>\\n      </ion-item>\\n    </ng-template>\\n\\n    <ion-button expand=\\\"block\\\" color=\\\"primary\\\" routerLink=\\\"/categorias\\\">Continuar Comprando</ion-button>\\n    <ion-button *ngIf=\\\"total() > 0\\\" expand=\\\"block\\\" color=\\\"secondary\\\" routerLink=\\\"/pick-address\\\">Finalizar Pedido</ion-button>\\n  </ion-list>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CartPage } from './cart.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CartPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CartPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CartPageRoutingModule } from './cart-routing.module';\n\nimport { CartPage } from './cart.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CartPageRoutingModule\n  ],\n  declarations: [CartPage]\n})\nexport class CartPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcGFnZXMvY2FydC9jYXJ0LnBhZ2Uuc2NzcyJ9 */\";","import { Component } from '@angular/core';\nimport { from, Observable, of } from 'rxjs';\nimport { map, mergeMap, reduce } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { ProdutoDTO } from 'src/models/produto.dto';\nimport { CartService } from 'src/services/cart.service';\nimport { ProdutoService } from 'src/services/domain/produto.service';\nimport { CartItem } from './../../models/cart.item';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.page.html',\n  styleUrls: ['./cart.page.scss'],\n})\nexport class CartPage {\n  items$: Observable<CartItem[]>;\n\n  constructor(\n    public service: CartService,\n    public produtoService: ProdutoService) {\n    this.items$ = this.loadImageUrls(this.service.getCart().items);\n  }\n\n  loadImageUrls(items: CartItem[]) {\n    return from(items).pipe(\n      mergeMap(item => {\n        return this.produtoService.getSmallImageFromBucket(item.produto.id).pipe(\n          map<Blob, CartItem>(p => {\n            const produto = ({ ...item.produto, imageUrl: `${environment.BUCKET_URL}/prod${item.produto.id}-small.jpg` });\n            return { ...item, produto };\n          }),\n        );\n      }),\n      reduce<CartItem, CartItem[]>((cartItems, cartItem) => [...cartItems, cartItem], []),\n    );\n  }\n\n  removeItem(produto: ProdutoDTO) {\n    this.items$ = of(this.service.removeProduto(produto).items);\n  }\n\n  increaseQuantity(produto: ProdutoDTO) {\n    this.items$ = of(this.service.increaseQuantity(produto).items);\n  }\n\n  decreaseQuantity(produto: ProdutoDTO) {\n    this.items$ = of(this.service.decreaseQuantity(produto).items);\n  }\n\n  total(): number {\n    return this.service.total();\n  }\n}\n"]}